<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="8" total="25" passed="15" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-09-21T09:03:36 IST" name="Suite" finished-at="2023-09-21T09:17:40 IST" duration-ms="843866">
    <groups>
    </groups>
    <test started-at="2023-09-21T09:03:36 IST" name="Test1" finished-at="2023-09-21T09:17:40 IST" duration-ms="843866">
      <class name="com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest">
        <test-method is-config="true" signature="beforeSuiteSetup()[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@5f3b84bd]" started-at="2023-09-21T09:03:36 IST" name="beforeSuiteSetup" finished-at="2023-09-21T09:03:36 IST" duration-ms="138" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuiteSetup -->
        <test-method is-config="true" signature="setUpClass()[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@5f3b84bd]" started-at="2023-09-21T09:03:37 IST" name="setUpClass" finished-at="2023-09-21T09:03:37 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@5f3b84bd]" started-at="2023-09-21T09:03:37 IST" name="beforeMethod" finished-at="2023-09-21T09:03:40 IST" duration-ms="3219" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest.VerifyEmpAddinEmpProfile() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="VerifyEmpAddinEmpProfile()[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@5f3b84bd]" started-at="2023-09-21T09:03:40 IST" name="VerifyEmpAddinEmpProfile" finished-at="2023-09-21T09:04:16 IST" duration-ms="36489" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyEmpAddinEmpProfile -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@5f3b84bd]" started-at="2023-09-21T09:04:16 IST" name="afterMethod" finished-at="2023-09-21T09:04:17 IST" duration-ms="771" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifyEmpAddinEmpProfile status=SUCCESS method=JiViewsEmployeeAdministrationTest.VerifyEmpAddinEmpProfile()[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@5f3b84bd] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@5f3b84bd]" started-at="2023-09-21T09:04:17 IST" name="beforeMethod" finished-at="2023-09-21T09:04:18 IST" duration-ms="906" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest.VerifyEmpAddinEmpProfileAlreadyExist() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="VerifyEmpAddinEmpProfileAlreadyExist()[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@5f3b84bd]" started-at="2023-09-21T09:04:18 IST" name="VerifyEmpAddinEmpProfileAlreadyExist" finished-at="2023-09-21T09:04:50 IST" duration-ms="31795" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyEmpAddinEmpProfileAlreadyExist -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@5f3b84bd]" started-at="2023-09-21T09:04:50 IST" name="afterMethod" finished-at="2023-09-21T09:04:50 IST" duration-ms="232" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifyEmpAddinEmpProfileAlreadyExist status=SUCCESS method=JiViewsEmployeeAdministrationTest.VerifyEmpAddinEmpProfileAlreadyExist()[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@5f3b84bd] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@5f3b84bd]" started-at="2023-09-21T09:04:50 IST" name="beforeMethod" finished-at="2023-09-21T09:04:51 IST" duration-ms="984" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest.VerifEmpIDSerach() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="VerifEmpIDSerach()[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@5f3b84bd]" started-at="2023-09-21T09:04:51 IST" name="VerifEmpIDSerach" finished-at="2023-09-21T09:05:14 IST" duration-ms="22890" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifEmpIDSerach -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@5f3b84bd]" started-at="2023-09-21T09:05:14 IST" name="afterMethod" finished-at="2023-09-21T09:05:14 IST" duration-ms="239" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifEmpIDSerach status=SUCCESS method=JiViewsEmployeeAdministrationTest.VerifEmpIDSerach()[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@5f3b84bd] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@5f3b84bd]" started-at="2023-09-21T09:05:14 IST" name="beforeMethod" finished-at="2023-09-21T09:05:15 IST" duration-ms="1012" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest.VerifEmpNameSearch() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="VerifEmpNameSearch()[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@5f3b84bd]" started-at="2023-09-21T09:05:15 IST" name="VerifEmpNameSearch" finished-at="2023-09-21T09:05:45 IST" duration-ms="29839" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifEmpNameSearch -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@5f3b84bd]" started-at="2023-09-21T09:05:45 IST" name="afterMethod" finished-at="2023-09-21T09:05:45 IST" duration-ms="251" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifEmpNameSearch status=SUCCESS method=JiViewsEmployeeAdministrationTest.VerifEmpNameSearch()[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@5f3b84bd] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@5f3b84bd]" started-at="2023-09-21T09:05:45 IST" name="beforeMethod" finished-at="2023-09-21T09:05:46 IST" duration-ms="1002" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest.VerifyEmpUpdate() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="VerifyEmpUpdate()[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@5f3b84bd]" started-at="2023-09-21T09:05:46 IST" name="VerifyEmpUpdate" finished-at="2023-09-21T09:06:20 IST" duration-ms="34015" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyEmpUpdate -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@5f3b84bd]" started-at="2023-09-21T09:06:20 IST" name="afterMethod" finished-at="2023-09-21T09:06:21 IST" duration-ms="272" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifyEmpUpdate status=SUCCESS method=JiViewsEmployeeAdministrationTest.VerifyEmpUpdate()[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@5f3b84bd] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@5f3b84bd]" started-at="2023-09-21T09:06:21 IST" name="beforeMethod" finished-at="2023-09-21T09:06:21 IST" duration-ms="971" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest.VerifyEmpUpdateDuplicate() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="VerifyEmpUpdateDuplicate()[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@5f3b84bd]" started-at="2023-09-21T09:06:21 IST" name="VerifyEmpUpdateDuplicate" finished-at="2023-09-21T09:07:06 IST" duration-ms="44548" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyEmpUpdateDuplicate -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@5f3b84bd]" started-at="2023-09-21T09:07:06 IST" name="afterMethod" finished-at="2023-09-21T09:07:06 IST" duration-ms="231" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifyEmpUpdateDuplicate status=SUCCESS method=JiViewsEmployeeAdministrationTest.VerifyEmpUpdateDuplicate()[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@5f3b84bd] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@5f3b84bd]" started-at="2023-09-21T09:07:06 IST" name="beforeMethod" finished-at="2023-09-21T09:07:07 IST" duration-ms="1010" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest.VerifyEmpUpdateContactsPositive() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="VerifyEmpUpdateContactsPositive()[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@5f3b84bd]" started-at="2023-09-21T09:07:07 IST" name="VerifyEmpUpdateContactsPositive" finished-at="2023-09-21T09:07:43 IST" duration-ms="35770" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyEmpUpdateContactsPositive -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@5f3b84bd]" started-at="2023-09-21T09:07:43 IST" name="afterMethod" finished-at="2023-09-21T09:07:43 IST" duration-ms="288" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifyEmpUpdateContactsPositive status=SUCCESS method=JiViewsEmployeeAdministrationTest.VerifyEmpUpdateContactsPositive()[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@5f3b84bd] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@5f3b84bd]" started-at="2023-09-21T09:07:43 IST" name="beforeMethod" finished-at="2023-09-21T09:07:44 IST" duration-ms="1003" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest.VerifyEmpUpdateContactsNegative() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="VerifyEmpUpdateContactsNegative()[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@5f3b84bd]" started-at="2023-09-21T09:07:44 IST" name="VerifyEmpUpdateContactsNegative" finished-at="2023-09-21T09:08:25 IST" duration-ms="40829" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyEmpUpdateContactsNegative -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@5f3b84bd]" started-at="2023-09-21T09:08:25 IST" name="afterMethod" finished-at="2023-09-21T09:08:25 IST" duration-ms="214" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifyEmpUpdateContactsNegative status=SUCCESS method=JiViewsEmployeeAdministrationTest.VerifyEmpUpdateContactsNegative()[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@5f3b84bd] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@5f3b84bd]" started-at="2023-09-21T09:08:25 IST" name="beforeMethod" finished-at="2023-09-21T09:08:26 IST" duration-ms="942" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest.VerifyEmpUpdateExcludedSkillsPositive() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="VerifyEmpUpdateExcludedSkillsPositive()[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@5f3b84bd]" started-at="2023-09-21T09:08:26 IST" name="VerifyEmpUpdateExcludedSkillsPositive" finished-at="2023-09-21T09:08:58 IST" duration-ms="31784" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyEmpUpdateExcludedSkillsPositive -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@5f3b84bd]" started-at="2023-09-21T09:08:58 IST" name="afterMethod" finished-at="2023-09-21T09:08:58 IST" duration-ms="275" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifyEmpUpdateExcludedSkillsPositive status=SUCCESS method=JiViewsEmployeeAdministrationTest.VerifyEmpUpdateExcludedSkillsPositive()[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@5f3b84bd] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@5f3b84bd]" started-at="2023-09-21T09:08:58 IST" name="beforeMethod" finished-at="2023-09-21T09:08:59 IST" duration-ms="958" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest.VerifyEmpUpdateExcludedSkillsNegative() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="VerifyEmpUpdateExcludedSkillsNegative()[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@5f3b84bd]" started-at="2023-09-21T09:08:59 IST" name="VerifyEmpUpdateExcludedSkillsNegative" finished-at="2023-09-21T09:09:25 IST" duration-ms="26026" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyEmpUpdateExcludedSkillsNegative -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@5f3b84bd]" started-at="2023-09-21T09:09:25 IST" name="afterMethod" finished-at="2023-09-21T09:09:26 IST" duration-ms="223" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifyEmpUpdateExcludedSkillsNegative status=SUCCESS method=JiViewsEmployeeAdministrationTest.VerifyEmpUpdateExcludedSkillsNegative()[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@5f3b84bd] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@5f3b84bd]" started-at="2023-09-21T09:09:26 IST" name="beforeMethod" finished-at="2023-09-21T09:09:27 IST" duration-ms="1055" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest.VerifyEmpUpdateAddRolesPositive() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="VerifyEmpUpdateAddRolesPositive()[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@5f3b84bd]" started-at="2023-09-21T09:09:27 IST" name="VerifyEmpUpdateAddRolesPositive" finished-at="2023-09-21T09:09:58 IST" duration-ms="31501" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyEmpUpdateAddRolesPositive -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@5f3b84bd]" started-at="2023-09-21T09:09:58 IST" name="afterMethod" finished-at="2023-09-21T09:09:58 IST" duration-ms="203" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifyEmpUpdateAddRolesPositive status=SUCCESS method=JiViewsEmployeeAdministrationTest.VerifyEmpUpdateAddRolesPositive()[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@5f3b84bd] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@5f3b84bd]" started-at="2023-09-21T09:09:58 IST" name="beforeMethod" finished-at="2023-09-21T09:09:59 IST" duration-ms="1000" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest.VerifyEmpUpdateAddRolesNegative() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="VerifyEmpUpdateAddRolesNegative()[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@5f3b84bd]" started-at="2023-09-21T09:09:59 IST" name="VerifyEmpUpdateAddRolesNegative" finished-at="2023-09-21T09:10:46 IST" duration-ms="46922" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyEmpUpdateAddRolesNegative -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@5f3b84bd]" started-at="2023-09-21T09:10:46 IST" name="afterMethod" finished-at="2023-09-21T09:10:47 IST" duration-ms="282" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifyEmpUpdateAddRolesNegative status=SUCCESS method=JiViewsEmployeeAdministrationTest.VerifyEmpUpdateAddRolesNegative()[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@5f3b84bd] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@5f3b84bd]" started-at="2023-09-21T09:10:47 IST" name="beforeMethod" finished-at="2023-09-21T09:10:48 IST" duration-ms="990" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest.VerifyEmpUpdateSecurity() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="VerifyEmpUpdateSecurity()[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@5f3b84bd]" started-at="2023-09-21T09:10:48 IST" name="VerifyEmpUpdateSecurity" finished-at="2023-09-21T09:12:12 IST" duration-ms="84320" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//*[@class='toast-message']"}
  (Session info: chrome=117.0.5938.88)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.11.0', revision: '040bc5406b'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.5'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [f0d14c5a4391d9a2ea6914c734b1e576, findElement {using=xpath, value=//*[@class='toast-message']}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 117.0.5938.88, chrome: {chromedriverVersion: 117.0.5938.88 (be6afae47212..., userDataDir: C:\Users\ashok\AppData\Loca...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:58767}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:58767/devtoo..., se:cdpVersion: 117.0.5938.88, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: f0d14c5a4391d9a2ea6914c734b1e576]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@class='toast-message']"}
  (Session info: chrome=117.0.5938.88)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.11.0', revision: '040bc5406b'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.5'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [f0d14c5a4391d9a2ea6914c734b1e576, findElement {using=xpath, value=//*[@class='toast-message']}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 117.0.5938.88, chrome: {chromedriverVersion: 117.0.5938.88 (be6afae47212..., userDataDir: C:\Users\ashok\AppData\Loca...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:58767}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:58767/devtoo..., se:cdpVersion: 117.0.5938.88, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: f0d14c5a4391d9a2ea6914c734b1e576
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:52)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:191)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:196)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:171)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:518)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:355)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:349)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:68)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy22.getText(Unknown Source)
at com.jivi.auto.employeepages.JiViewsEmployeeAdministration.empAdd_security(JiViewsEmployeeAdministration.java:1279)
at com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest.VerifyEmpUpdateSecurity(JiViewsEmployeeAdministrationTest.java:587)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at com.jivi.auto.driver.JiviewsMainClass.main(JiviewsMainClass.java:27)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyEmpUpdateSecurity -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@5f3b84bd]" started-at="2023-09-21T09:12:12 IST" name="afterMethod" finished-at="2023-09-21T09:12:12 IST" duration-ms="384" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifyEmpUpdateSecurity status=FAILURE method=JiViewsEmployeeAdministrationTest.VerifyEmpUpdateSecurity()[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@5f3b84bd] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@5f3b84bd]" started-at="2023-09-21T09:12:12 IST" name="beforeMethod" finished-at="2023-09-21T09:12:13 IST" duration-ms="1008" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest.VerifyEmpUpdateESS() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="VerifyEmpUpdateESS()[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@5f3b84bd]" started-at="2023-09-21T09:12:13 IST" name="VerifyEmpUpdateESS" finished-at="2023-09-21T09:13:32 IST" duration-ms="78758" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyEmpUpdateESS -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@5f3b84bd]" started-at="2023-09-21T09:13:32 IST" name="afterMethod" finished-at="2023-09-21T09:13:32 IST" duration-ms="269" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifyEmpUpdateESS status=SUCCESS method=JiViewsEmployeeAdministrationTest.VerifyEmpUpdateESS()[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@5f3b84bd] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@5f3b84bd]" started-at="2023-09-21T09:13:32 IST" name="beforeMethod" finished-at="2023-09-21T09:13:33 IST" duration-ms="1022" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest.VerifyEmpUpdateMisc() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="VerifyEmpUpdateMisc()[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@5f3b84bd]" started-at="2023-09-21T09:13:33 IST" name="VerifyEmpUpdateMisc" finished-at="2023-09-21T09:14:29 IST" duration-ms="55328" status="FAIL">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for visibility of [[ChromeDriver: chrome on windows (bef013b28639953b1f07bf5758e8debf)] -> xpath: //*[text()='Employee Administration']] (tried for 40 second(s) with 500 milliseconds interval)
Build info: version: '4.11.0', revision: '040bc5406b'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.5'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 117.0.5938.88, chrome: {chromedriverVersion: 117.0.5938.88 (be6afae47212..., userDataDir: C:\Users\ashok\AppData\Loca...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:59167}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:59167/devtoo..., se:cdpVersion: 117.0.5938.88, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: bef013b28639953b1f07bf5758e8debf]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for visibility of [[ChromeDriver: chrome on windows (bef013b28639953b1f07bf5758e8debf)] -> xpath: //*[text()='Employee Administration']] (tried for 40 second(s) with 500 milliseconds interval)
Build info: version: '4.11.0', revision: '040bc5406b'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.5'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 117.0.5938.88, chrome: {chromedriverVersion: 117.0.5938.88 (be6afae47212..., userDataDir: C:\Users\ashok\AppData\Loca...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:59167}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:59167/devtoo..., se:cdpVersion: 117.0.5938.88, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: bef013b28639953b1f07bf5758e8debf
at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:84)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:230)
at com.jivi.auto.pageobjectutils.POMCommon.waitUntilElementIsVisible(POMCommon.java:48)
at com.jivi.auto.pageobjectutils.POMCommon.getObject(POMCommon.java:32)
at com.jivi.auto.pageobjectutils.WebElementKeys.click(WebElementKeys.java:57)
at com.jivi.auto.employeepages.JiViewsEmployeeAdministration.empAdd_Misc(JiViewsEmployeeAdministration.java:1365)
at com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest.VerifyEmpUpdateMisc(JiViewsEmployeeAdministrationTest.java:654)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at com.jivi.auto.driver.JiviewsMainClass.main(JiviewsMainClass.java:27)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyEmpUpdateMisc -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@5f3b84bd]" started-at="2023-09-21T09:14:29 IST" name="afterMethod" finished-at="2023-09-21T09:14:29 IST" duration-ms="384" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifyEmpUpdateMisc status=FAILURE method=JiViewsEmployeeAdministrationTest.VerifyEmpUpdateMisc()[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@5f3b84bd] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@5f3b84bd]" started-at="2023-09-21T09:14:29 IST" name="beforeMethod" finished-at="2023-09-21T09:14:30 IST" duration-ms="961" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest.VerifyLoginwithNewEmployee() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="VerifyLoginwithNewEmployee()[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@5f3b84bd]" started-at="2023-09-21T09:14:30 IST" name="VerifyLoginwithNewEmployee" finished-at="2023-09-21T09:14:41 IST" duration-ms="10660" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyLoginwithNewEmployee -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@5f3b84bd]" started-at="2023-09-21T09:14:41 IST" name="afterMethod" finished-at="2023-09-21T09:14:41 IST" duration-ms="187" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifyLoginwithNewEmployee status=SUCCESS method=JiViewsEmployeeAdministrationTest.VerifyLoginwithNewEmployee()[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@5f3b84bd] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@5f3b84bd]" started-at="2023-09-21T09:14:41 IST" name="beforeMethod" finished-at="2023-09-21T09:14:42 IST" duration-ms="922" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest.VerifyEmpProCreationFiveEmp() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="VerifyEmpProCreationFiveEmp()[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@5f3b84bd]" started-at="2023-09-21T09:14:42 IST" name="VerifyEmpProCreationFiveEmp" finished-at="2023-09-21T09:17:40 IST" duration-ms="178159" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyEmpProCreationFiveEmp -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@5f3b84bd]" started-at="2023-09-21T09:17:40 IST" name="afterMethod" finished-at="2023-09-21T09:17:40 IST" duration-ms="300" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifyEmpProCreationFiveEmp status=SUCCESS method=JiViewsEmployeeAdministrationTest.VerifyEmpProCreationFiveEmp()[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@5f3b84bd] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@5f3b84bd]" started-at="2023-09-21T09:17:40 IST" name="afterClass" finished-at="2023-09-21T09:17:40 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method is-config="true" signature="afterTestSuite()[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@5f3b84bd]" started-at="2023-09-21T09:17:40 IST" name="afterTestSuite" finished-at="2023-09-21T09:17:41 IST" duration-ms="1166" status="FAIL">
          <exception class="org.openqa.selenium.InvalidArgumentException">
            <message>
              <![CDATA[invalid argument
  (Session info: chrome=117.0.5938.88)
Build info: version: '4.11.0', revision: '040bc5406b'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.5'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [f0add486cde37464838f9e2f1c50deac, get {url=src\test\resources\Jiviews Site - AutomationTestReport1695267220296.html}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 117.0.5938.88, chrome: {chromedriverVersion: 117.0.5938.88 (be6afae47212..., userDataDir: C:\Users\ashok\AppData\Loca...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:59379}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:59379/devtoo..., se:cdpVersion: 117.0.5938.88, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: f0add486cde37464838f9e2f1c50deac]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.InvalidArgumentException: invalid argument
  (Session info: chrome=117.0.5938.88)
Build info: version: '4.11.0', revision: '040bc5406b'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.5'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [f0add486cde37464838f9e2f1c50deac, get {url=src\test\resources\Jiviews Site - AutomationTestReport1695267220296.html}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 117.0.5938.88, chrome: {chromedriverVersion: 117.0.5938.88 (be6afae47212..., userDataDir: C:\Users\ashok\AppData\Loca...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:59379}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:59379/devtoo..., se:cdpVersion: 117.0.5938.88, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: f0add486cde37464838f9e2f1c50deac
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:52)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:191)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:196)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:171)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:518)
at org.openqa.selenium.remote.RemoteWebDriver.get(RemoteWebDriver.java:300)
at com.jivi.auto.utilities.BaseTest.afterTestSuite(BaseTest.java:227)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:63)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:348)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:302)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:351)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at com.jivi.auto.driver.JiviewsMainClass.main(JiviewsMainClass.java:27)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.InvalidArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTestSuite -->
      </class> <!-- com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest -->
    </test> <!-- Test1 -->
  </suite> <!-- Suite -->
</testng-results>
