<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="54" total="60" passed="5" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-05-08T09:45:58 IST" name="Suite" finished-at="2023-05-08T09:58:46 IST" duration-ms="767729">
    <groups>
    </groups>
    <test started-at="2023-05-08T09:45:58 IST" name="Test1" finished-at="2023-05-08T09:46:19 IST" duration-ms="20358">
      <class name="com.jivi.auto.employeetest.JiViewsSystemDefinitionsTest">
        <test-method is-config="true" signature="setUpClass()[pri:0, instance:com.jivi.auto.employeetest.JiViewsSystemDefinitionsTest@1883871b]" started-at="2023-05-08T09:45:59 IST" name="setUpClass" finished-at="2023-05-08T09:45:59 IST" duration-ms="31" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.jivi.auto.employeetest.JiViewsSystemDefinitionsTest@1883871b]" started-at="2023-05-08T09:45:59 IST" name="beforeMethod" finished-at="2023-05-08T09:46:03 IST" duration-ms="3877" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.jivi.auto.employeetest.JiViewsSystemDefinitionsTest.VerifyLogin() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="VerifyLogin()[pri:0, instance:com.jivi.auto.employeetest.JiViewsSystemDefinitionsTest@1883871b]" started-at="2023-05-08T09:46:03 IST" name="VerifyLogin" finished-at="2023-05-08T09:46:18 IST" duration-ms="15030" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyLogin -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.jivi.auto.employeetest.JiViewsSystemDefinitionsTest@1883871b]" started-at="2023-05-08T09:46:18 IST" name="afterMethod" finished-at="2023-05-08T09:46:19 IST" duration-ms="1086" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifyLogin status=SUCCESS method=JiViewsSystemDefinitionsTest.VerifyLogin()[pri:0, instance:com.jivi.auto.employeetest.JiViewsSystemDefinitionsTest@1883871b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:com.jivi.auto.employeetest.JiViewsSystemDefinitionsTest@1883871b]" started-at="2023-05-08T09:46:19 IST" name="afterClass" finished-at="2023-05-08T09:46:19 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- com.jivi.auto.employeetest.JiViewsSystemDefinitionsTest -->
    </test> <!-- Test1 -->
    <test started-at="2023-05-08T09:46:19 IST" name="Test2" finished-at="2023-05-08T09:52:47 IST" duration-ms="387859">
      <class name="com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest">
        <test-method is-config="true" signature="setUpClass()[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@57617a75]" started-at="2023-05-08T09:46:19 IST" name="setUpClass" finished-at="2023-05-08T09:46:19 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@57617a75]" started-at="2023-05-08T09:46:19 IST" name="beforeMethod" finished-at="2023-05-08T09:46:21 IST" duration-ms="1954" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest.VerifyEmpAddinEmpProfile() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="VerifyEmpAddinEmpProfile()[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@57617a75]" started-at="2023-05-08T09:46:21 IST" name="VerifyEmpAddinEmpProfile" finished-at="2023-05-08T09:47:45 IST" duration-ms="84055" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyEmpAddinEmpProfile -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@57617a75]" started-at="2023-05-08T09:47:45 IST" name="afterMethod" finished-at="2023-05-08T09:47:45 IST" duration-ms="620" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifyEmpAddinEmpProfile status=SUCCESS method=JiViewsEmployeeAdministrationTest.VerifyEmpAddinEmpProfile()[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@57617a75] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@57617a75]" started-at="2023-05-08T09:47:45 IST" name="beforeMethod" finished-at="2023-05-08T09:47:47 IST" duration-ms="1749" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest.VerifyEmpProCreationFiveEmp() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="VerifyEmpProCreationFiveEmp()[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@57617a75]" started-at="2023-05-08T09:47:47 IST" name="VerifyEmpProCreationFiveEmp" finished-at="2023-05-08T09:52:46 IST" duration-ms="298796" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyEmpProCreationFiveEmp -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@57617a75]" started-at="2023-05-08T09:52:46 IST" name="afterMethod" finished-at="2023-05-08T09:52:47 IST" duration-ms="666" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifyEmpProCreationFiveEmp status=SUCCESS method=JiViewsEmployeeAdministrationTest.VerifyEmpProCreationFiveEmp()[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@57617a75] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@57617a75]" started-at="2023-05-08T09:52:47 IST" name="afterClass" finished-at="2023-05-08T09:52:47 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest -->
    </test> <!-- Test2 -->
    <test started-at="2023-05-08T09:52:47 IST" name="Test3" finished-at="2023-05-08T09:58:46 IST" duration-ms="359447">
      <class name="com.jivi.auto.employeetest.RoaserSetup">
        <test-method is-config="true" signature="beforeSuiteSetup()[pri:0, instance:com.jivi.auto.employeetest.RoaserSetup@2d758472]" started-at="2023-05-08T09:45:58 IST" name="beforeSuiteSetup" finished-at="2023-05-08T09:45:58 IST" duration-ms="164" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuiteSetup -->
        <test-method is-config="true" signature="setUpClass()[pri:0, instance:com.jivi.auto.employeetest.RoaserSetup@2d758472]" started-at="2023-05-08T09:52:47 IST" name="setUpClass" finished-at="2023-05-08T09:52:47 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.jivi.auto.employeetest.RoaserSetup@2d758472]" started-at="2023-05-08T09:52:47 IST" name="beforeMethod" finished-at="2023-05-08T09:52:48 IST" duration-ms="1350" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.jivi.auto.employeetest.RoaserSetup.createShiftBandDefinition() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="createShiftBandDefinition()[pri:0, instance:com.jivi.auto.employeetest.RoaserSetup@2d758472]" started-at="2023-05-08T09:52:48 IST" name="createShiftBandDefinition" finished-at="2023-05-08T09:54:46 IST" duration-ms="118222" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[ShiftBand Creation expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: ShiftBand Creation expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at com.jivi.auto.employeetest.RoaserSetup.createShiftBandDefinition(RoaserSetup.java:114)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at com.jivi.auto.driver.JiviewsMainClass.main(JiviewsMainClass.java:27)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createShiftBandDefinition -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.jivi.auto.employeetest.RoaserSetup@2d758472]" started-at="2023-05-08T09:54:46 IST" name="afterMethod" finished-at="2023-05-08T09:54:47 IST" duration-ms="515" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=createShiftBandDefinition status=FAILURE method=RoaserSetup.createShiftBandDefinition()[pri:0, instance:com.jivi.auto.employeetest.RoaserSetup@2d758472] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.jivi.auto.employeetest.RoaserSetup@2d758472]" started-at="2023-05-08T09:54:47 IST" name="beforeMethod" finished-at="2023-05-08T09:54:48 IST" duration-ms="930" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.jivi.auto.employeetest.RoaserSetup.rosterGroupAssignmentAddingSelectedEmp() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="rosterGroupAssignmentAddingSelectedEmp()[pri:0, instance:com.jivi.auto.employeetest.RoaserSetup@2d758472]" started-at="2023-05-08T09:54:48 IST" name="rosterGroupAssignmentAddingSelectedEmp" finished-at="2023-05-08T09:56:17 IST" duration-ms="88893" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- rosterGroupAssignmentAddingSelectedEmp -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.jivi.auto.employeetest.RoaserSetup@2d758472]" started-at="2023-05-08T09:56:17 IST" name="afterMethod" finished-at="2023-05-08T09:56:17 IST" duration-ms="524" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=rosterGroupAssignmentAddingSelectedEmp status=SUCCESS method=RoaserSetup.rosterGroupAssignmentAddingSelectedEmp()[pri:0, instance:com.jivi.auto.employeetest.RoaserSetup@2d758472] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.jivi.auto.employeetest.RoaserSetup@2d758472]" started-at="2023-05-08T09:56:17 IST" name="beforeMethod" finished-at="2023-05-08T09:56:18 IST" duration-ms="1163" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.jivi.auto.employeetest.RoaserSetup.rosterCreation() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="rosterCreation()[pri:0, instance:com.jivi.auto.employeetest.RoaserSetup@2d758472]" started-at="2023-05-08T09:56:18 IST" name="rosterCreation" finished-at="2023-05-08T09:58:46 IST" duration-ms="147339" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- rosterCreation -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.jivi.auto.employeetest.RoaserSetup@2d758472]" started-at="2023-05-08T09:58:46 IST" name="afterMethod" finished-at="2023-05-08T09:58:46 IST" duration-ms="499" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=rosterCreation status=SUCCESS method=RoaserSetup.rosterCreation()[pri:0, instance:com.jivi.auto.employeetest.RoaserSetup@2d758472] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:com.jivi.auto.employeetest.RoaserSetup@2d758472]" started-at="2023-05-08T09:58:46 IST" name="afterClass" finished-at="2023-05-08T09:58:46 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method is-config="true" signature="endTest()[pri:0, instance:com.jivi.auto.employeetest.RoaserSetup@2d758472]" started-at="2023-05-08T09:58:46 IST" name="endTest" finished-at="2023-05-08T09:58:46 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTest -->
        <test-method is-config="true" signature="afterTestSuite()[pri:0, instance:com.jivi.auto.employeetest.RoaserSetup@2d758472]" started-at="2023-05-08T09:58:46 IST" name="afterTestSuite" finished-at="2023-05-08T09:58:46 IST" duration-ms="34" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTestSuite -->
      </class> <!-- com.jivi.auto.employeetest.RoaserSetup -->
    </test> <!-- Test3 -->
  </suite> <!-- Suite -->
</testng-results>
