<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="27" total="50" passed="21" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-04-29T09:32:40 IST" name="Suite" finished-at="2023-04-29T10:01:08 IST" duration-ms="1708801">
    <groups>
    </groups>
    <test started-at="2023-04-29T09:32:40 IST" name="Test1" finished-at="2023-04-29T09:37:14 IST" duration-ms="274039">
      <class name="com.jivi.auto.employeetest.JiViewsSystemDefinitionsTest">
        <test-method is-config="true" signature="setUpClass()[pri:0, instance:com.jivi.auto.employeetest.JiViewsSystemDefinitionsTest@1883871b]" started-at="2023-04-29T09:32:40 IST" name="setUpClass" finished-at="2023-04-29T09:32:40 IST" duration-ms="8" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.jivi.auto.employeetest.JiViewsSystemDefinitionsTest@1883871b]" started-at="2023-04-29T09:32:40 IST" name="beforeMethod" finished-at="2023-04-29T09:32:41 IST" duration-ms="1566" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.jivi.auto.employeetest.JiViewsSystemDefinitionsTest.VerifyLogin() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="VerifyLogin()[pri:0, instance:com.jivi.auto.employeetest.JiViewsSystemDefinitionsTest@1883871b]" started-at="2023-04-29T09:32:41 IST" name="VerifyLogin" finished-at="2023-04-29T09:33:22 IST" duration-ms="40940" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyLogin -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.jivi.auto.employeetest.JiViewsSystemDefinitionsTest@1883871b]" started-at="2023-04-29T09:33:22 IST" name="afterMethod" finished-at="2023-04-29T09:33:23 IST" duration-ms="451" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifyLogin status=SUCCESS method=JiViewsSystemDefinitionsTest.VerifyLogin()[pri:0, instance:com.jivi.auto.employeetest.JiViewsSystemDefinitionsTest@1883871b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.jivi.auto.employeetest.JiViewsSystemDefinitionsTest@1883871b]" started-at="2023-04-29T09:33:23 IST" name="beforeMethod" finished-at="2023-04-29T09:33:23 IST" duration-ms="645" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.jivi.auto.employeetest.JiViewsSystemDefinitionsTest.VerifyEmpCategory() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="VerifyEmpCategory()[pri:0, instance:com.jivi.auto.employeetest.JiViewsSystemDefinitionsTest@1883871b]" started-at="2023-04-29T09:33:23 IST" name="VerifyEmpCategory" finished-at="2023-04-29T09:34:13 IST" duration-ms="49279" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyEmpCategory -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.jivi.auto.employeetest.JiViewsSystemDefinitionsTest@1883871b]" started-at="2023-04-29T09:34:13 IST" name="afterMethod" finished-at="2023-04-29T09:34:13 IST" duration-ms="289" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifyEmpCategory status=SUCCESS method=JiViewsSystemDefinitionsTest.VerifyEmpCategory()[pri:0, instance:com.jivi.auto.employeetest.JiViewsSystemDefinitionsTest@1883871b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.jivi.auto.employeetest.JiViewsSystemDefinitionsTest@1883871b]" started-at="2023-04-29T09:34:13 IST" name="beforeMethod" finished-at="2023-04-29T09:34:14 IST" duration-ms="715" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.jivi.auto.employeetest.JiViewsSystemDefinitionsTest.VerifyEmpAdd() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="VerifyEmpAdd()[pri:0, instance:com.jivi.auto.employeetest.JiViewsSystemDefinitionsTest@1883871b]" started-at="2023-04-29T09:34:14 IST" name="VerifyEmpAdd" finished-at="2023-04-29T09:35:18 IST" duration-ms="63833" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyEmpAdd -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.jivi.auto.employeetest.JiViewsSystemDefinitionsTest@1883871b]" started-at="2023-04-29T09:35:18 IST" name="afterMethod" finished-at="2023-04-29T09:35:18 IST" duration-ms="271" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifyEmpAdd status=SUCCESS method=JiViewsSystemDefinitionsTest.VerifyEmpAdd()[pri:0, instance:com.jivi.auto.employeetest.JiViewsSystemDefinitionsTest@1883871b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.jivi.auto.employeetest.JiViewsSystemDefinitionsTest@1883871b]" started-at="2023-04-29T09:35:18 IST" name="beforeMethod" finished-at="2023-04-29T09:35:19 IST" duration-ms="776" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.jivi.auto.employeetest.JiViewsSystemDefinitionsTest.VerifySkillAdd() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="VerifySkillAdd()[pri:0, instance:com.jivi.auto.employeetest.JiViewsSystemDefinitionsTest@1883871b]" started-at="2023-04-29T09:35:19 IST" name="VerifySkillAdd" finished-at="2023-04-29T09:36:19 IST" duration-ms="60672" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifySkillAdd -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.jivi.auto.employeetest.JiViewsSystemDefinitionsTest@1883871b]" started-at="2023-04-29T09:36:19 IST" name="afterMethod" finished-at="2023-04-29T09:36:20 IST" duration-ms="283" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifySkillAdd status=SUCCESS method=JiViewsSystemDefinitionsTest.VerifySkillAdd()[pri:0, instance:com.jivi.auto.employeetest.JiViewsSystemDefinitionsTest@1883871b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.jivi.auto.employeetest.JiViewsSystemDefinitionsTest@1883871b]" started-at="2023-04-29T09:36:20 IST" name="beforeMethod" finished-at="2023-04-29T09:36:20 IST" duration-ms="703" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.jivi.auto.employeetest.JiViewsSystemDefinitionsTest.VerifyRolesAdd() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="VerifyRolesAdd()[pri:0, instance:com.jivi.auto.employeetest.JiViewsSystemDefinitionsTest@1883871b]" started-at="2023-04-29T09:36:20 IST" name="VerifyRolesAdd" finished-at="2023-04-29T09:37:13 IST" duration-ms="53166" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyRolesAdd -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.jivi.auto.employeetest.JiViewsSystemDefinitionsTest@1883871b]" started-at="2023-04-29T09:37:13 IST" name="afterMethod" finished-at="2023-04-29T09:37:14 IST" duration-ms="221" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifyRolesAdd status=SUCCESS method=JiViewsSystemDefinitionsTest.VerifyRolesAdd()[pri:0, instance:com.jivi.auto.employeetest.JiViewsSystemDefinitionsTest@1883871b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:com.jivi.auto.employeetest.JiViewsSystemDefinitionsTest@1883871b]" started-at="2023-04-29T09:37:14 IST" name="afterClass" finished-at="2023-04-29T09:37:14 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- com.jivi.auto.employeetest.JiViewsSystemDefinitionsTest -->
    </test> <!-- Test1 -->
    <test started-at="2023-04-29T09:37:14 IST" name="Test2" finished-at="2023-04-29T10:01:08 IST" duration-ms="1434731">
      <class name="com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest">
        <test-method is-config="true" signature="beforeSuiteSetup()[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@57617a75]" started-at="2023-04-29T09:32:39 IST" name="beforeSuiteSetup" finished-at="2023-04-29T09:32:40 IST" duration-ms="106" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuiteSetup -->
        <test-method is-config="true" signature="setUpClass()[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@57617a75]" started-at="2023-04-29T09:37:14 IST" name="setUpClass" finished-at="2023-04-29T09:37:14 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@57617a75]" started-at="2023-04-29T09:37:14 IST" name="beforeMethod" finished-at="2023-04-29T09:37:14 IST" duration-ms="769" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest.VerifyEmpAddinEmpProfile() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="VerifyEmpAddinEmpProfile()[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@57617a75]" started-at="2023-04-29T09:37:14 IST" name="VerifyEmpAddinEmpProfile" finished-at="2023-04-29T09:38:35 IST" duration-ms="80459" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyEmpAddinEmpProfile -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@57617a75]" started-at="2023-04-29T09:38:35 IST" name="afterMethod" finished-at="2023-04-29T09:38:35 IST" duration-ms="264" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifyEmpAddinEmpProfile status=SUCCESS method=JiViewsEmployeeAdministrationTest.VerifyEmpAddinEmpProfile()[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@57617a75] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@57617a75]" started-at="2023-04-29T09:38:35 IST" name="beforeMethod" finished-at="2023-04-29T09:38:36 IST" duration-ms="686" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest.VerifyEmpAddinEmpProfileAlreadyExist() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="VerifyEmpAddinEmpProfileAlreadyExist()[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@57617a75]" started-at="2023-04-29T09:38:36 IST" name="VerifyEmpAddinEmpProfileAlreadyExist" finished-at="2023-04-29T09:40:03 IST" duration-ms="87047" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyEmpAddinEmpProfileAlreadyExist -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@57617a75]" started-at="2023-04-29T09:40:03 IST" name="afterMethod" finished-at="2023-04-29T09:40:03 IST" duration-ms="312" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifyEmpAddinEmpProfileAlreadyExist status=SUCCESS method=JiViewsEmployeeAdministrationTest.VerifyEmpAddinEmpProfileAlreadyExist()[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@57617a75] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@57617a75]" started-at="2023-04-29T09:40:03 IST" name="beforeMethod" finished-at="2023-04-29T09:40:05 IST" duration-ms="1404" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest.VerifEmpIDSerach() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="VerifEmpIDSerach()[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@57617a75]" started-at="2023-04-29T09:40:05 IST" name="VerifEmpIDSerach" finished-at="2023-04-29T09:41:00 IST" duration-ms="55605" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifEmpIDSerach -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@57617a75]" started-at="2023-04-29T09:41:00 IST" name="afterMethod" finished-at="2023-04-29T09:41:00 IST" duration-ms="257" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifEmpIDSerach status=SUCCESS method=JiViewsEmployeeAdministrationTest.VerifEmpIDSerach()[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@57617a75] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@57617a75]" started-at="2023-04-29T09:41:00 IST" name="beforeMethod" finished-at="2023-04-29T09:41:01 IST" duration-ms="651" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest.VerifEmpNameSearch() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="VerifEmpNameSearch()[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@57617a75]" started-at="2023-04-29T09:41:01 IST" name="VerifEmpNameSearch" finished-at="2023-04-29T09:41:40 IST" duration-ms="39015" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifEmpNameSearch -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@57617a75]" started-at="2023-04-29T09:41:40 IST" name="afterMethod" finished-at="2023-04-29T09:41:40 IST" duration-ms="288" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifEmpNameSearch status=SUCCESS method=JiViewsEmployeeAdministrationTest.VerifEmpNameSearch()[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@57617a75] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@57617a75]" started-at="2023-04-29T09:41:40 IST" name="beforeMethod" finished-at="2023-04-29T09:41:41 IST" duration-ms="698" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest.VerifyEmpUpdate() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="VerifyEmpUpdate()[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@57617a75]" started-at="2023-04-29T09:41:41 IST" name="VerifyEmpUpdate" finished-at="2023-04-29T09:42:50 IST" duration-ms="68852" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyEmpUpdate -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@57617a75]" started-at="2023-04-29T09:42:50 IST" name="afterMethod" finished-at="2023-04-29T09:42:50 IST" duration-ms="274" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifyEmpUpdate status=SUCCESS method=JiViewsEmployeeAdministrationTest.VerifyEmpUpdate()[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@57617a75] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@57617a75]" started-at="2023-04-29T09:42:50 IST" name="beforeMethod" finished-at="2023-04-29T09:42:51 IST" duration-ms="641" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest.VerifyEmpUpdateDuplicate() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="VerifyEmpUpdateDuplicate()[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@57617a75]" started-at="2023-04-29T09:42:51 IST" name="VerifyEmpUpdateDuplicate" finished-at="2023-04-29T09:44:29 IST" duration-ms="97773" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyEmpUpdateDuplicate -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@57617a75]" started-at="2023-04-29T09:44:29 IST" name="afterMethod" finished-at="2023-04-29T09:44:29 IST" duration-ms="278" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifyEmpUpdateDuplicate status=SUCCESS method=JiViewsEmployeeAdministrationTest.VerifyEmpUpdateDuplicate()[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@57617a75] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@57617a75]" started-at="2023-04-29T09:44:29 IST" name="beforeMethod" finished-at="2023-04-29T09:44:30 IST" duration-ms="661" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest.VerifyEmpUpdateContactsPositive() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="VerifyEmpUpdateContactsPositive()[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@57617a75]" started-at="2023-04-29T09:44:30 IST" name="VerifyEmpUpdateContactsPositive" finished-at="2023-04-29T09:45:39 IST" duration-ms="69193" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyEmpUpdateContactsPositive -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@57617a75]" started-at="2023-04-29T09:45:39 IST" name="afterMethod" finished-at="2023-04-29T09:45:39 IST" duration-ms="269" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifyEmpUpdateContactsPositive status=SUCCESS method=JiViewsEmployeeAdministrationTest.VerifyEmpUpdateContactsPositive()[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@57617a75] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@57617a75]" started-at="2023-04-29T09:45:39 IST" name="beforeMethod" finished-at="2023-04-29T09:45:40 IST" duration-ms="659" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest.VerifyEmpUpdateContactsNegative() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="VerifyEmpUpdateContactsNegative()[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@57617a75]" started-at="2023-04-29T09:45:40 IST" name="VerifyEmpUpdateContactsNegative" finished-at="2023-04-29T09:47:04 IST" duration-ms="84004" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyEmpUpdateContactsNegative -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@57617a75]" started-at="2023-04-29T09:47:04 IST" name="afterMethod" finished-at="2023-04-29T09:47:04 IST" duration-ms="277" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifyEmpUpdateContactsNegative status=SUCCESS method=JiViewsEmployeeAdministrationTest.VerifyEmpUpdateContactsNegative()[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@57617a75] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@57617a75]" started-at="2023-04-29T09:47:04 IST" name="beforeMethod" finished-at="2023-04-29T09:47:05 IST" duration-ms="629" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest.VerifyEmpUpdateExcludedSkillsPositive() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="VerifyEmpUpdateExcludedSkillsPositive()[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@57617a75]" started-at="2023-04-29T09:47:05 IST" name="VerifyEmpUpdateExcludedSkillsPositive" finished-at="2023-04-29T09:48:13 IST" duration-ms="68610" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyEmpUpdateExcludedSkillsPositive -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@57617a75]" started-at="2023-04-29T09:48:13 IST" name="afterMethod" finished-at="2023-04-29T09:48:14 IST" duration-ms="271" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifyEmpUpdateExcludedSkillsPositive status=SUCCESS method=JiViewsEmployeeAdministrationTest.VerifyEmpUpdateExcludedSkillsPositive()[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@57617a75] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@57617a75]" started-at="2023-04-29T09:48:14 IST" name="beforeMethod" finished-at="2023-04-29T09:48:14 IST" duration-ms="674" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest.VerifyEmpUpdateExcludedSkillsNegative() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="VerifyEmpUpdateExcludedSkillsNegative()[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@57617a75]" started-at="2023-04-29T09:48:14 IST" name="VerifyEmpUpdateExcludedSkillsNegative" finished-at="2023-04-29T09:49:34 IST" duration-ms="79480" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyEmpUpdateExcludedSkillsNegative -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@57617a75]" started-at="2023-04-29T09:49:34 IST" name="afterMethod" finished-at="2023-04-29T09:49:34 IST" duration-ms="270" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifyEmpUpdateExcludedSkillsNegative status=SUCCESS method=JiViewsEmployeeAdministrationTest.VerifyEmpUpdateExcludedSkillsNegative()[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@57617a75] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@57617a75]" started-at="2023-04-29T09:49:34 IST" name="beforeMethod" finished-at="2023-04-29T09:49:35 IST" duration-ms="666" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest.VerifyEmpUpdateAddRolesPositive() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="VerifyEmpUpdateAddRolesPositive()[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@57617a75]" started-at="2023-04-29T09:49:35 IST" name="VerifyEmpUpdateAddRolesPositive" finished-at="2023-04-29T09:50:45 IST" duration-ms="70379" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyEmpUpdateAddRolesPositive -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@57617a75]" started-at="2023-04-29T09:50:45 IST" name="afterMethod" finished-at="2023-04-29T09:50:45 IST" duration-ms="288" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifyEmpUpdateAddRolesPositive status=SUCCESS method=JiViewsEmployeeAdministrationTest.VerifyEmpUpdateAddRolesPositive()[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@57617a75] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@57617a75]" started-at="2023-04-29T09:50:45 IST" name="beforeMethod" finished-at="2023-04-29T09:50:46 IST" duration-ms="652" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest.VerifyEmpUpdateAddRolesNegative() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="VerifyEmpUpdateAddRolesNegative()[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@57617a75]" started-at="2023-04-29T09:50:46 IST" name="VerifyEmpUpdateAddRolesNegative" finished-at="2023-04-29T09:51:25 IST" duration-ms="39137" status="FAIL">
          <exception class="org.openqa.selenium.ElementClickInterceptedException">
            <message>
              <![CDATA[element click intercepted: Element <i class="fas fa-sitemap navbar-icon align-middle" style=""></i> is not clickable at point (1101, 31). Other element would receive the click: <div class="toast-message">...</div>
  (Session info: chrome=112.0.5615.138)
Build info: version: '4.1.2', revision: '9a5a329c5a'
System info: host: 'ASHOK', ip: '192.168.0.104', os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.5'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [ba98cf6bae487a1d38eca938e0f62855, clickElement {id=efb82c7a-3c25-4abb-9378-a347f0eaf598}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.138, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Users\ashok\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:58880}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:58880/devtoo..., se:cdpVersion: 112.0.5615.138, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on WINDOWS (ba98cf6bae487a1d38eca938e0f62855)] -> xpath: //*[@id='dvOrgUnitDropdown']/a/i]
Session ID: ba98cf6bae487a1d38eca938e0f62855]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.ElementClickInterceptedException: element click intercepted: Element <i class="fas fa-sitemap navbar-icon align-middle" style=""></i> is not clickable at point (1101, 31). Other element would receive the click: <div class="toast-message">...</div>
  (Session info: chrome=112.0.5615.138)
Build info: version: '4.1.2', revision: '9a5a329c5a'
System info: host: 'ASHOK', ip: '192.168.0.104', os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.5'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [ba98cf6bae487a1d38eca938e0f62855, clickElement {id=efb82c7a-3c25-4abb-9378-a347f0eaf598}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.138, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Users\ashok\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:58880}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:58880/devtoo..., se:cdpVersion: 112.0.5615.138, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on WINDOWS (ba98cf6bae487a1d38eca938e0f62855)] -> xpath: //*[@id='dvOrgUnitDropdown']/a/i]
Session ID: ba98cf6bae487a1d38eca938e0f62855
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:184)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:167)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:142)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:558)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:251)
at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:77)
at jdk.internal.reflect.GeneratedMethodAccessor21.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:52)
at jdk.proxy2/jdk.proxy2.$Proxy22.click(Unknown Source)
at com.jivi.auto.pageobjectutils.WebElementKeys.click(WebElementKeys.java:58)
at com.jivi.auto.employeepages.JiViewsEmployeeAdministration.empAddRoles_RemoveAllRoles(JiViewsEmployeeAdministration.java:1050)
at com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest.VerifyEmpUpdateAddRolesNegative(JiViewsEmployeeAdministrationTest.java:541)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at com.jivi.auto.driver.JiviewsMainClass.main(JiviewsMainClass.java:27)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.ElementClickInterceptedException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyEmpUpdateAddRolesNegative -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@57617a75]" started-at="2023-04-29T09:51:25 IST" name="afterMethod" finished-at="2023-04-29T09:51:25 IST" duration-ms="390" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifyEmpUpdateAddRolesNegative status=FAILURE method=JiViewsEmployeeAdministrationTest.VerifyEmpUpdateAddRolesNegative()[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@57617a75] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@57617a75]" started-at="2023-04-29T09:51:25 IST" name="beforeMethod" finished-at="2023-04-29T09:51:26 IST" duration-ms="639" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest.VerifyEmpUpdateSecurity() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="VerifyEmpUpdateSecurity()[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@57617a75]" started-at="2023-04-29T09:51:26 IST" name="VerifyEmpUpdateSecurity" finished-at="2023-04-29T09:52:50 IST" duration-ms="83657" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyEmpUpdateSecurity -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@57617a75]" started-at="2023-04-29T09:52:50 IST" name="afterMethod" finished-at="2023-04-29T09:52:50 IST" duration-ms="273" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifyEmpUpdateSecurity status=SUCCESS method=JiViewsEmployeeAdministrationTest.VerifyEmpUpdateSecurity()[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@57617a75] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@57617a75]" started-at="2023-04-29T09:52:50 IST" name="beforeMethod" finished-at="2023-04-29T09:52:51 IST" duration-ms="671" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest.VerifyEmpUpdateESS() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="VerifyEmpUpdateESS()[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@57617a75]" started-at="2023-04-29T09:52:51 IST" name="VerifyEmpUpdateESS" finished-at="2023-04-29T09:54:08 IST" duration-ms="77274" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyEmpUpdateESS -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@57617a75]" started-at="2023-04-29T09:54:08 IST" name="afterMethod" finished-at="2023-04-29T09:54:08 IST" duration-ms="261" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifyEmpUpdateESS status=SUCCESS method=JiViewsEmployeeAdministrationTest.VerifyEmpUpdateESS()[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@57617a75] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@57617a75]" started-at="2023-04-29T09:54:08 IST" name="beforeMethod" finished-at="2023-04-29T09:54:09 IST" duration-ms="648" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest.VerifyEmpUpdateMisc() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="VerifyEmpUpdateMisc()[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@57617a75]" started-at="2023-04-29T09:54:09 IST" name="VerifyEmpUpdateMisc" finished-at="2023-04-29T09:54:46 IST" duration-ms="36631" status="FAIL">
          <exception class="org.openqa.selenium.ElementClickInterceptedException">
            <message>
              <![CDATA[element click intercepted: Element <i class="fas fa-sitemap navbar-icon align-middle" style=""></i> is not clickable at point (1101, 31). Other element would receive the click: <div class="toast-message">...</div>
  (Session info: chrome=112.0.5615.138)
Build info: version: '4.1.2', revision: '9a5a329c5a'
System info: host: 'ASHOK', ip: '192.168.0.104', os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.5'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [c3ce302100e80af384bc1f2c01624bfa, clickElement {id=ebbaab5c-b195-4c38-8f56-76cd5bbfe9e2}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.138, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Users\ashok\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:59000}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:59000/devtoo..., se:cdpVersion: 112.0.5615.138, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on WINDOWS (c3ce302100e80af384bc1f2c01624bfa)] -> xpath: //*[@id='dvOrgUnitDropdown']/a/i]
Session ID: c3ce302100e80af384bc1f2c01624bfa]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.ElementClickInterceptedException: element click intercepted: Element <i class="fas fa-sitemap navbar-icon align-middle" style=""></i> is not clickable at point (1101, 31). Other element would receive the click: <div class="toast-message">...</div>
  (Session info: chrome=112.0.5615.138)
Build info: version: '4.1.2', revision: '9a5a329c5a'
System info: host: 'ASHOK', ip: '192.168.0.104', os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.5'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [c3ce302100e80af384bc1f2c01624bfa, clickElement {id=ebbaab5c-b195-4c38-8f56-76cd5bbfe9e2}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.138, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Users\ashok\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:59000}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:59000/devtoo..., se:cdpVersion: 112.0.5615.138, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on WINDOWS (c3ce302100e80af384bc1f2c01624bfa)] -> xpath: //*[@id='dvOrgUnitDropdown']/a/i]
Session ID: c3ce302100e80af384bc1f2c01624bfa
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:184)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:167)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:142)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:558)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:251)
at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:77)
at jdk.internal.reflect.GeneratedMethodAccessor21.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:52)
at jdk.proxy2/jdk.proxy2.$Proxy22.click(Unknown Source)
at com.jivi.auto.pageobjectutils.WebElementKeys.click(WebElementKeys.java:58)
at com.jivi.auto.employeepages.JiViewsEmployeeAdministration.empAdd_Misc(JiViewsEmployeeAdministration.java:1236)
at com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest.VerifyEmpUpdateMisc(JiViewsEmployeeAdministrationTest.java:636)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at com.jivi.auto.driver.JiviewsMainClass.main(JiviewsMainClass.java:27)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.ElementClickInterceptedException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyEmpUpdateMisc -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@57617a75]" started-at="2023-04-29T09:54:46 IST" name="afterMethod" finished-at="2023-04-29T09:54:46 IST" duration-ms="401" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifyEmpUpdateMisc status=FAILURE method=JiViewsEmployeeAdministrationTest.VerifyEmpUpdateMisc()[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@57617a75] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@57617a75]" started-at="2023-04-29T09:54:46 IST" name="beforeMethod" finished-at="2023-04-29T09:54:47 IST" duration-ms="661" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest.VerifyLoginwithNewEmployee() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="VerifyLoginwithNewEmployee()[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@57617a75]" started-at="2023-04-29T09:54:47 IST" name="VerifyLoginwithNewEmployee" finished-at="2023-04-29T09:55:09 IST" duration-ms="22149" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyLoginwithNewEmployee -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@57617a75]" started-at="2023-04-29T09:55:09 IST" name="afterMethod" finished-at="2023-04-29T09:55:09 IST" duration-ms="275" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifyLoginwithNewEmployee status=SUCCESS method=JiViewsEmployeeAdministrationTest.VerifyLoginwithNewEmployee()[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@57617a75] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@57617a75]" started-at="2023-04-29T09:55:09 IST" name="beforeMethod" finished-at="2023-04-29T09:55:10 IST" duration-ms="651" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest.VerifyEmpProCreationFiveEmp() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="VerifyEmpProCreationFiveEmp()[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@57617a75]" started-at="2023-04-29T09:55:10 IST" name="VerifyEmpProCreationFiveEmp" finished-at="2023-04-29T09:59:48 IST" duration-ms="278639" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyEmpProCreationFiveEmp -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@57617a75]" started-at="2023-04-29T09:59:48 IST" name="afterMethod" finished-at="2023-04-29T09:59:49 IST" duration-ms="339" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifyEmpProCreationFiveEmp status=SUCCESS method=JiViewsEmployeeAdministrationTest.VerifyEmpProCreationFiveEmp()[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@57617a75] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@57617a75]" started-at="2023-04-29T09:59:49 IST" name="beforeMethod" finished-at="2023-04-29T09:59:49 IST" duration-ms="651" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest.VerifyTerminateEmployee() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="VerifyTerminateEmployee()[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@57617a75]" started-at="2023-04-29T09:59:49 IST" name="VerifyTerminateEmployee" finished-at="2023-04-29T10:01:08 IST" duration-ms="78832" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyTerminateEmployee -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@57617a75]" started-at="2023-04-29T10:01:08 IST" name="afterMethod" finished-at="2023-04-29T10:01:08 IST" duration-ms="281" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifyTerminateEmployee status=SUCCESS method=JiViewsEmployeeAdministrationTest.VerifyTerminateEmployee()[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@57617a75] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@57617a75]" started-at="2023-04-29T10:01:08 IST" name="afterClass" finished-at="2023-04-29T10:01:08 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method is-config="true" signature="afterTestSuite()[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@57617a75]" started-at="2023-04-29T10:01:08 IST" name="afterTestSuite" finished-at="2023-04-29T10:01:08 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTestSuite -->
      </class> <!-- com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest -->
    </test> <!-- Test2 -->
  </suite> <!-- Suite -->
</testng-results>
