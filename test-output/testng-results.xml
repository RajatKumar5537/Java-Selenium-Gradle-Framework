<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="50" total="60" passed="10" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-05-04T21:40:46 IST" name="Suite" finished-at="2023-05-04T21:57:26 IST" duration-ms="999934">
    <groups>
    </groups>
    <test started-at="2023-05-04T21:40:46 IST" name="Test1" finished-at="2023-05-04T21:41:08 IST" duration-ms="22296">
      <class name="com.jivi.auto.employeetest.JiViewsSystemDefinitionsTest">
        <test-method is-config="true" signature="setUpClass()[pri:0, instance:com.jivi.auto.employeetest.JiViewsSystemDefinitionsTest@1883871b]" started-at="2023-05-04T21:40:46 IST" name="setUpClass" finished-at="2023-05-04T21:40:46 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.jivi.auto.employeetest.JiViewsSystemDefinitionsTest@1883871b]" started-at="2023-05-04T21:40:46 IST" name="beforeMethod" finished-at="2023-05-04T21:40:48 IST" duration-ms="1770" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.jivi.auto.employeetest.JiViewsSystemDefinitionsTest.VerifyLogin() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="VerifyLogin()[pri:0, instance:com.jivi.auto.employeetest.JiViewsSystemDefinitionsTest@1883871b]" started-at="2023-05-04T21:40:48 IST" name="VerifyLogin" finished-at="2023-05-04T21:41:08 IST" duration-ms="19843" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyLogin -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.jivi.auto.employeetest.JiViewsSystemDefinitionsTest@1883871b]" started-at="2023-05-04T21:41:08 IST" name="afterMethod" finished-at="2023-05-04T21:41:08 IST" duration-ms="442" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifyLogin status=SUCCESS method=JiViewsSystemDefinitionsTest.VerifyLogin()[pri:0, instance:com.jivi.auto.employeetest.JiViewsSystemDefinitionsTest@1883871b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:com.jivi.auto.employeetest.JiViewsSystemDefinitionsTest@1883871b]" started-at="2023-05-04T21:41:08 IST" name="afterClass" finished-at="2023-05-04T21:41:08 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- com.jivi.auto.employeetest.JiViewsSystemDefinitionsTest -->
    </test> <!-- Test1 -->
    <test started-at="2023-05-04T21:41:08 IST" name="Test2" finished-at="2023-05-04T21:47:24 IST" duration-ms="375536">
      <class name="com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest">
        <test-method is-config="true" signature="setUpClass()[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@57617a75]" started-at="2023-05-04T21:41:08 IST" name="setUpClass" finished-at="2023-05-04T21:41:08 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@57617a75]" started-at="2023-05-04T21:41:08 IST" name="beforeMethod" finished-at="2023-05-04T21:41:09 IST" duration-ms="630" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest.VerifyEmpAddinEmpProfile() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="VerifyEmpAddinEmpProfile()[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@57617a75]" started-at="2023-05-04T21:41:09 IST" name="VerifyEmpAddinEmpProfile" finished-at="2023-05-04T21:42:40 IST" duration-ms="91242" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyEmpAddinEmpProfile -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@57617a75]" started-at="2023-05-04T21:42:40 IST" name="afterMethod" finished-at="2023-05-04T21:42:40 IST" duration-ms="266" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifyEmpAddinEmpProfile status=SUCCESS method=JiViewsEmployeeAdministrationTest.VerifyEmpAddinEmpProfile()[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@57617a75] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@57617a75]" started-at="2023-05-04T21:42:40 IST" name="beforeMethod" finished-at="2023-05-04T21:42:41 IST" duration-ms="719" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest.VerifyEmpProCreationFiveEmp() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="VerifyEmpProCreationFiveEmp()[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@57617a75]" started-at="2023-05-04T21:42:41 IST" name="VerifyEmpProCreationFiveEmp" finished-at="2023-05-04T21:47:23 IST" duration-ms="282426" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyEmpProCreationFiveEmp -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@57617a75]" started-at="2023-05-04T21:47:23 IST" name="afterMethod" finished-at="2023-05-04T21:47:24 IST" duration-ms="250" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifyEmpProCreationFiveEmp status=SUCCESS method=JiViewsEmployeeAdministrationTest.VerifyEmpProCreationFiveEmp()[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@57617a75] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest@57617a75]" started-at="2023-05-04T21:47:24 IST" name="afterClass" finished-at="2023-05-04T21:47:24 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- com.jivi.auto.employeetest.JiViewsEmployeeAdministrationTest -->
    </test> <!-- Test2 -->
    <test started-at="2023-05-04T21:47:24 IST" name="Test3" finished-at="2023-05-04T21:57:26 IST" duration-ms="602074">
      <class name="com.jivi.auto.employeetest.RoaserSetup">
        <test-method is-config="true" signature="beforeSuiteSetup()[pri:0, instance:com.jivi.auto.employeetest.RoaserSetup@2d758472]" started-at="2023-05-04T21:40:46 IST" name="beforeSuiteSetup" finished-at="2023-05-04T21:40:46 IST" duration-ms="95" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuiteSetup -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.jivi.auto.employeetest.RoaserSetup@2d758472]" started-at="2023-05-04T21:47:24 IST" name="beforeMethod" finished-at="2023-05-04T21:47:24 IST" duration-ms="685" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.jivi.auto.employeetest.RoaserSetup.createShiftBandDefinition() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="setUpClass()[pri:0, instance:com.jivi.auto.employeetest.RoaserSetup@2d758472]" started-at="2023-05-04T21:47:24 IST" name="setUpClass" finished-at="2023-05-04T21:47:24 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method signature="createShiftBandDefinition()[pri:0, instance:com.jivi.auto.employeetest.RoaserSetup@2d758472]" started-at="2023-05-04T21:47:24 IST" name="createShiftBandDefinition" finished-at="2023-05-04T21:48:33 IST" duration-ms="68133" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createShiftBandDefinition -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.jivi.auto.employeetest.RoaserSetup@2d758472]" started-at="2023-05-04T21:48:33 IST" name="afterMethod" finished-at="2023-05-04T21:48:33 IST" duration-ms="264" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=createShiftBandDefinition status=SUCCESS method=RoaserSetup.createShiftBandDefinition()[pri:0, instance:com.jivi.auto.employeetest.RoaserSetup@2d758472] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.jivi.auto.employeetest.RoaserSetup@2d758472]" started-at="2023-05-04T21:48:33 IST" name="beforeMethod" finished-at="2023-05-04T21:48:33 IST" duration-ms="673" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.jivi.auto.employeetest.RoaserSetup.editShiftBandDefinition() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="editShiftBandDefinition()[pri:0, instance:com.jivi.auto.employeetest.RoaserSetup@2d758472]" started-at="2023-05-04T21:48:33 IST" name="editShiftBandDefinition" finished-at="2023-05-04T21:49:34 IST" duration-ms="60374" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- editShiftBandDefinition -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.jivi.auto.employeetest.RoaserSetup@2d758472]" started-at="2023-05-04T21:49:34 IST" name="afterMethod" finished-at="2023-05-04T21:49:34 IST" duration-ms="272" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=editShiftBandDefinition status=SUCCESS method=RoaserSetup.editShiftBandDefinition()[pri:0, instance:com.jivi.auto.employeetest.RoaserSetup@2d758472] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.jivi.auto.employeetest.RoaserSetup@2d758472]" started-at="2023-05-04T21:49:34 IST" name="beforeMethod" finished-at="2023-05-04T21:49:35 IST" duration-ms="668" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.jivi.auto.employeetest.RoaserSetup.rosterGroupAssignmentAddingSelectedEmp() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="rosterGroupAssignmentAddingSelectedEmp()[pri:0, instance:com.jivi.auto.employeetest.RoaserSetup@2d758472]" started-at="2023-05-04T21:49:35 IST" name="rosterGroupAssignmentAddingSelectedEmp" finished-at="2023-05-04T21:51:05 IST" duration-ms="90133" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- rosterGroupAssignmentAddingSelectedEmp -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.jivi.auto.employeetest.RoaserSetup@2d758472]" started-at="2023-05-04T21:51:05 IST" name="afterMethod" finished-at="2023-05-04T21:51:05 IST" duration-ms="265" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=rosterGroupAssignmentAddingSelectedEmp status=SUCCESS method=RoaserSetup.rosterGroupAssignmentAddingSelectedEmp()[pri:0, instance:com.jivi.auto.employeetest.RoaserSetup@2d758472] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.jivi.auto.employeetest.RoaserSetup@2d758472]" started-at="2023-05-04T21:51:05 IST" name="beforeMethod" finished-at="2023-05-04T21:51:06 IST" duration-ms="702" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.jivi.auto.employeetest.RoaserSetup.rosterGroupAssignmentAddingAllEmp() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="rosterGroupAssignmentAddingAllEmp()[pri:0, instance:com.jivi.auto.employeetest.RoaserSetup@2d758472]" started-at="2023-05-04T21:51:06 IST" name="rosterGroupAssignmentAddingAllEmp" finished-at="2023-05-04T21:52:49 IST" duration-ms="103308" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- rosterGroupAssignmentAddingAllEmp -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.jivi.auto.employeetest.RoaserSetup@2d758472]" started-at="2023-05-04T21:52:49 IST" name="afterMethod" finished-at="2023-05-04T21:52:50 IST" duration-ms="339" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=rosterGroupAssignmentAddingAllEmp status=SUCCESS method=RoaserSetup.rosterGroupAssignmentAddingAllEmp()[pri:0, instance:com.jivi.auto.employeetest.RoaserSetup@2d758472] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.jivi.auto.employeetest.RoaserSetup@2d758472]" started-at="2023-05-04T21:52:50 IST" name="beforeMethod" finished-at="2023-05-04T21:52:50 IST" duration-ms="664" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.jivi.auto.employeetest.RoaserSetup.rosterGroupAssignmentRemoveSelectedEmp() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="rosterGroupAssignmentRemoveSelectedEmp()[pri:0, instance:com.jivi.auto.employeetest.RoaserSetup@2d758472]" started-at="2023-05-04T21:52:50 IST" name="rosterGroupAssignmentRemoveSelectedEmp" finished-at="2023-05-04T21:54:35 IST" duration-ms="104341" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- rosterGroupAssignmentRemoveSelectedEmp -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.jivi.auto.employeetest.RoaserSetup@2d758472]" started-at="2023-05-04T21:54:35 IST" name="afterMethod" finished-at="2023-05-04T21:54:35 IST" duration-ms="278" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=rosterGroupAssignmentRemoveSelectedEmp status=SUCCESS method=RoaserSetup.rosterGroupAssignmentRemoveSelectedEmp()[pri:0, instance:com.jivi.auto.employeetest.RoaserSetup@2d758472] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.jivi.auto.employeetest.RoaserSetup@2d758472]" started-at="2023-05-04T21:54:35 IST" name="beforeMethod" finished-at="2023-05-04T21:54:35 IST" duration-ms="661" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.jivi.auto.employeetest.RoaserSetup.rosterGroupAssignmentRemoveAllEmp() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="rosterGroupAssignmentRemoveAllEmp()[pri:0, instance:com.jivi.auto.employeetest.RoaserSetup@2d758472]" started-at="2023-05-04T21:54:35 IST" name="rosterGroupAssignmentRemoveAllEmp" finished-at="2023-05-04T21:55:45 IST" duration-ms="69283" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- rosterGroupAssignmentRemoveAllEmp -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.jivi.auto.employeetest.RoaserSetup@2d758472]" started-at="2023-05-04T21:55:45 IST" name="afterMethod" finished-at="2023-05-04T21:55:45 IST" duration-ms="183" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=rosterGroupAssignmentRemoveAllEmp status=SUCCESS method=RoaserSetup.rosterGroupAssignmentRemoveAllEmp()[pri:0, instance:com.jivi.auto.employeetest.RoaserSetup@2d758472] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.jivi.auto.employeetest.RoaserSetup@2d758472]" started-at="2023-05-04T21:55:45 IST" name="beforeMethod" finished-at="2023-05-04T21:55:46 IST" duration-ms="599" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.jivi.auto.employeetest.RoaserSetup.rosterCreation() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="rosterCreation()[pri:0, instance:com.jivi.auto.employeetest.RoaserSetup@2d758472]" started-at="2023-05-04T21:55:46 IST" name="rosterCreation" finished-at="2023-05-04T21:57:26 IST" duration-ms="100044" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- rosterCreation -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.jivi.auto.employeetest.RoaserSetup@2d758472]" started-at="2023-05-04T21:57:26 IST" name="afterMethod" finished-at="2023-05-04T21:57:26 IST" duration-ms="199" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=rosterCreation status=SUCCESS method=RoaserSetup.rosterCreation()[pri:0, instance:com.jivi.auto.employeetest.RoaserSetup@2d758472] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="endTest()[pri:0, instance:com.jivi.auto.employeetest.RoaserSetup@2d758472]" started-at="2023-05-04T21:57:26 IST" name="endTest" finished-at="2023-05-04T21:57:26 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTest -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:com.jivi.auto.employeetest.RoaserSetup@2d758472]" started-at="2023-05-04T21:57:26 IST" name="afterClass" finished-at="2023-05-04T21:57:26 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method is-config="true" signature="afterTestSuite()[pri:0, instance:com.jivi.auto.employeetest.RoaserSetup@2d758472]" started-at="2023-05-04T21:57:26 IST" name="afterTestSuite" finished-at="2023-05-04T21:57:26 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTestSuite -->
      </class> <!-- com.jivi.auto.employeetest.RoaserSetup -->
    </test> <!-- Test3 -->
  </suite> <!-- Suite -->
</testng-results>
